IMAGE_NAME := docker-julia-jupyter
LIVE_IMAGE_NAME := docker-pluto-live
PUBLIC_IMAGE_NAME := gonzih/tft.jl
CONTAINER_NAME := gonzih-tft

DOCKER_PORT_ARGS := -p 8888:8888 -p 1234:1234 -p 2345:2345
DOCKER_GPU_ARGS := --gpus all
DOCKER_V_ARGS := -v $(shell pwd)/notebooks:/notebooks --env-file ./.env
DOCKER_NAME_ARG := --name $(CONTAINER_NAME) --rm
DOCKER_ARGS := $(DOCKER_NAME_ARG) $(DOCKER_PORT_ARGS) $(DOCKER_V_ARGS)
DOCKER_TAG := 7

docker-run: build-docker-image
	docker run $(DOCKER_ARGS) -ti $(IMAGE_NAME)

docker-run-pluto-live: build-docker-image
	docker run $(DOCKER_ARGS) -ti $(LIVE_IMAGE_NAME)

docker-shell: build-docker-image
	docker run $(DOCKER_V_ARGS) -ti $(IMAGE_NAME) su -c julia julia

build-docker-image:
	docker build -f Dockerfile.dev -t $(IMAGE_NAME) .
	docker build -f Dockerfile.live -t $(LIVE_IMAGE_NAME) .

build-public-image:
	docker build -f Dockerfile.public -t $(PUBLIC_IMAGE_NAME):latest .
	docker tag $(PUBLIC_IMAGE_NAME):latest $(PUBLIC_IMAGE_NAME):$(DOCKER_TAG)

docker-run-public:
	docker run $(DOCKER_NAME_ARG) $(DOCKER_PORT_ARGS) -t $(PUBLIC_IMAGE_NAME)

docker-pull-public:
	docker pull $(PUBLIC_IMAGE_NAME):latest

docker-cp-from-public: clear-data
	docker cp $(CONTAINER_NAME):/app/notebooks/data ./notebooks/

docker-push-public:
	docker push --all-tags $(PUBLIC_IMAGE_NAME)

docker-run-scrape: build-docker-image
	docker run $(DOCKER_V_ARGS) -t $(IMAGE_NAME) su -c "julia /notebooks/scripts/scrape.jl" julia

docker-run-export: build-docker-image
	docker run $(DOCKER_V_ARGS) -t $(IMAGE_NAME) su -c "julia /notebooks/scripts/export.jl" julia

docker-run-export-notebooks:
	docker run $(shell pwd)/notebooks/src:/app/notebooks/src -t $(PUBLIC_IMAGE_NAME) su -c "julia /app/notebooks/scripts/export_notebooks.jl" julia

scrape-all: clear-cache docker-run-scrape docker-run-export pack-cache pack-data